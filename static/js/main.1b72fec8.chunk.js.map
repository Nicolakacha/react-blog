{"version":3,"sources":["constants/breakpoint.js","utils.js","WebAPI.js","redux/userSlice.js","components/Navbar/Navbar.js","images/bean.svg","pages/AboutMePage/AboutMePage.js","components/Button/Button.js","redux/postsSlice.js","components/Post/Post.js","components/Loading/Loading.js","pages/HomePage/HomePage.js","components/Form/Form.js","components/Input/UserInput.js","components/Input/TogglePasswordInput.js","components/ErrorMessage/ErrorMessage.js","pages/LoginPage/LoginPage.js","pages/NewPostPage/NewPostPage.js","pages/EditPostPage/EditPostPage.js","pages/PostPage/PostPage.js","components/Pagination/Pagination.js","pages/PostsPage/PostsPage.js","pages/RegisterPage/RegisterPage.js","components/App/App.js","redux/store.js","index.js"],"names":["MEDIA_QUERY_MD","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPostsAPI","fetch","then","res","json","getLimitedPostsAPI","page","limit","loginAPI","user","username","password","method","headers","body","JSON","stringify","registerAPI","nickname","userSlice","createSlice","name","initialState","userId","userErrorMessage","isUserLoading","reducers","setIsUserLoading","state","action","payload","setUserId","setUserErrorMessage","selectUserId","store","selectIsUserLoading","selectUserErrorMessage","actions","checkToken","dispatch","ok","console","log","message","getMe","authorization","getMeAPI","data","id","NavbarContainer","styled","div","NavbarList","Brand","Link","Nav","NavLink","Logout","a","Navbar","useDispatch","navigate","useNavigate","useSelector","isUserloading","to","children","onClick","alert","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","cy","r","fill","attributeName","repeatCount","dur","values","keyTimes","begin","_ref3","transform","d","type","SvgBean","_ref","svgRef","title","titleId","props","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","ForwardRef","Root","Container","Title","h1","Content","BeanWrapper","AboutMePage","Button","button","postsSlice","isLoading","totalPostNumber","posts","post","newPostResponse","errorMessage","setIsLoading","setPost","setTotalPostsNumber","setPosts","setNewPostResponse","setErrorMessage","selectPost","selectPosts","selectIsLoading","selectErrorMessage","selectTotalPostsNumber","getLimitedPosts","getPost","getPostAPI","addPost","addPostAPI","editPost","editPostAPI","deletePost","deletePostAPI","PostContainer","PostTitle","h2","PostDate","PostBody","PostInfo","PostButton","Post","postId","Date","createdAt","toLocaleString","LoadingWrapper","Loading","LatestPosts","slice","map","HomePage","useEffect","Form","form","$width","$paddingType","InputWrapper","Input","input","UserInput","value","handleInputFocus","handleInputChange","onFocus","onChange","TogglePasswordWrapper","TogglePasswordLabel","label","togglePassword","htmlFor","ErrorMessage","$height","SubmitButton","LoginPage","useState","setUsername","setPassword","showPassword","setShowPassword","setError","setValue","setState","e","onSubmit","preventDefault","TitleWrapper","InputHeader","TitleInput","BodyInput","textarea","NewPostPage","setTitle","setBody","controlInput","col","EditPostPage","useParams","trim","PostPage","PaginationContainer","Pages","Page","PaginationDescription","Pagination","pagination","totalPostsNumber","currentPage","setCurrentPage","handleClickPage","PostsContainer","PostItem","PostsPage","setPagination","pages","useRef","current","Math","ceil","Array","from","_","getData","RegisterPage","setNickname","Footer","App","basename","path","element","configureStore","reducer","postReducer","userReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b72fec8.chunk.js","sourcesContent":["export const MEDIA_QUERY_MD = '@media screen and (min-width: 768px)';\nexport const MEDIA_QUERY_LG = '@media screen and (min-width: 1024px)';","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  return localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPostsAPI = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getLimitedPostsAPI = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc&_expand=user`\n  ).then((res) => res.json());\n};\n\nexport const getPostAPI = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) => res.json());\n};\n\nexport const addPostAPI = ({ title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const editPostAPI = ({ title, body, id }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'PATCH',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePostAPI = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: { authorization: `Bearer ${token}` },\n  }).then((res) => res.json());\n};\n\nexport const loginAPI = (user) => {\n  const { username, password } = user;\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const registerAPI = (user) => {\n  const { nickname, username, password } = user;\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMeAPI = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { loginAPI, registerAPI, getMeAPI } from '../WebAPI';\nimport { setAuthToken, getAuthToken } from '../utils';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userId: null,\n    userErrorMessage: null,\n    isUserLoading: false,\n  },\n\n  reducers: {\n    setIsUserLoading(state, action) {\n      state.isUserLoading = action.payload;\n    },\n    setUserId(state, action) {\n      state.userId = action.payload;\n    },\n    setUserErrorMessage(state, action) {\n      state.userErrorMessage = action.payload;\n    },\n  },\n});\n\nexport const selectUserId = (store) => store.user.userId;\nexport const selectIsUserLoading = (store) => store.user.isUserLoading;\nexport const selectUserErrorMessage = (store) => store.user.userErrorMessage;\n\nexport const {\n  setIsUserLoading,\n  setUserId,\n  setUserErrorMessage,\n} = userSlice.actions;\n\nconst checkToken = (res, dispatch) => {\n  if (res.ok === 1) {\n    return setAuthToken(res.token);\n  }\n  console.log(res)\n  dispatch(setUserErrorMessage(res.message));\n};\n\nexport const login = (user) => async (dispatch) => {\n  dispatch(setIsUserLoading(true));\n  await loginAPI(user).then((res) => checkToken(res, dispatch));\n  return dispatch(getMe());\n};\n\nexport const register = (user) => async (dispatch) => {\n  dispatch(setIsUserLoading(true));\n  await registerAPI(user).then((res) => checkToken(res, dispatch));\n  return dispatch(getMe());\n};\n\nexport const getMe = () => (dispatch) => {\n  dispatch(setIsUserLoading(true));\n  if (getAuthToken()) {\n    return getMeAPI().then((res) => {\n      dispatch(setIsUserLoading(false));\n      if (res.ok !== 1) {\n        setAuthToken(null);\n        return;\n      }\n      dispatch(setUserId(res.data.id));\n      return res.data.id;\n    });\n  }\n  dispatch(setIsUserLoading(false));\n};\n\nexport const logout = () => (dispatch) => {\n  setAuthToken('');\n  dispatch(setUserId(null));\n  alert('登出成功');\n};\n\nexport default userSlice.reducer;\n","import { Link, NavLink, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoint';\nimport styled from 'styled-components';\nimport {\n  logout,\n  selectUserId,\n  selectIsUserLoading,\n} from '../../redux/userSlice';\n\nconst NavbarContainer = styled.div`\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.5);\n  padding: 0px 5vw;\n  background: white;\n  flex-direction: column;\n  ${MEDIA_QUERY_MD} {\n    height: 64px;\n    flex-direction: row;\n  }\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n`;\n\nconst Brand = styled(Link)`\n  font-size: 32px;\n  color: #017a75;\n  margin-top: 10px;\n  -webkit-tap-highlight-color: transparent;\n  ${MEDIA_QUERY_MD} {\n    margin-top: 0px;\n  }\n`;\n\nconst Nav = styled(NavLink)`\n  display: flex;\n  margin: 0 6px;\n  align-items: center;\n  height: 64px;\n  -webkit-tap-highlight-color: transparent;\n  ${MEDIA_QUERY_MD} {\n    margin: 0 30px;\n  }\n`;\n\nconst Logout = styled.a`\n  display: flex;\n  align-items: center;\n  margin: 0 6px;\n  height: 64px;\n  ${MEDIA_QUERY_MD} {\n    margin: 0 30px;\n  }\n`;\n\nexport default function Navbar() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userId = useSelector(selectUserId);\n  const isUserloading = useSelector(selectIsUserLoading);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/react-blog');\n  };\n\n  return (\n    <NavbarContainer>\n      <Brand to=\"/react-blog\" children=\"React Blog\" />\n      <NavbarList>\n        <Nav to=\"/react-blog/about-me\" children=\"關於我\" />\n        <Nav to=\"/react-blog/posts\" children=\"文章列表\" />\n        {isUserloading ? (\n          <Nav to=\"/\" children=\"檢查登入資訊中\" />\n        ) : (\n          <>\n            {userId && <Nav to=\"/react-blog/new-post\" children=\"發表文章\" />}\n            {userId && <Logout onClick={handleLogout} children=\"登出\" />}\n            {!userId && <Nav to=\"/react-blog/login\" children=\"登入\" />}\n            {!userId && <Nav to=\"/react-blog/register\" children=\"註冊\" />}\n          </>\n        )}\n      </NavbarList>\n    </NavbarContainer>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 50,\n  r: 4,\n  fill: \"#d7adb0\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"cx\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"95;35\",\n  keyTimes: \"0;1\",\n  begin: \"-0.67s\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0;1;1\",\n  keyTimes: \"0;0.2;1\",\n  begin: \"-0.67s\"\n})), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 50,\n  r: 4,\n  fill: \"#d7adb0\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"cx\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"95;35\",\n  keyTimes: \"0;1\",\n  begin: \"-0.33s\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0;1;1\",\n  keyTimes: \"0;0.2;1\",\n  begin: \"-0.33s\"\n})), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 50,\n  r: 4,\n  fill: \"#d7adb0\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"cx\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"95;35\",\n  keyTimes: \"0;1\",\n  begin: \"0s\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0;1;1\",\n  keyTimes: \"0;0.2;1\",\n  begin: \"0s\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-15 0)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50 50L20 50A30 30 0 0 0 80 50Z\",\n  fill: \"#d7d3d0\",\n  transform: \"rotate(90 50 50)\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50 50L20 50A30 30 0 0 0 80 50Z\",\n  fill: \"#d7d3d0\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0 50 50;45 50 50;0 50 50\",\n  keyTimes: \"0;0.5;1\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50 50L20 50A30 30 0 0 1 80 50Z\",\n  fill: \"#d7d3d0\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0 50 50;-45 50 50;0 50 50\",\n  keyTimes: \"0;0.5;1\"\n})));\n\nfunction SvgBean(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"136px\",\n    height: \"136px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBean);\nexport default __webpack_public_path__ + \"static/media/bean.f2665f75.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { ReactComponent as Bean } from '../../images/bean.svg';\n\nconst Root = styled.div`\n  margin: 0 10vw;\n  height: calc(100vh - 133px);\n`;\n\nconst Container = styled.div`\n  max-width: 600px;\n  height: 400px;\n  margin: 50px auto 0;\n  padding: 20px;\n  background: rgba(210, 210, 210, 0.4);\n  text-align: center;\n  transition: all linear 0.2s;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  &:hover {\n    transition: all linear 0.2s;\n    box-shadow: 1px 2px 6px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n`;\n\nconst Content = styled.div`\n  display: flex\n  justify-content: center;\n`;\n\nconst BeanWrapper = styled.div`\n  transform: translateX(4%);\n`\n\nexport default function AboutMePage() {\n  return (\n    <Root>\n      <Container>\n        <Title>A Simple Blog</Title>\n        <Content>\n          利用 React 實作 SPA 部落格～\n          <br />\n          <BeanWrapper><Bean /></BeanWrapper> \n        </Content>\n      </Container>\n    </Root>\n  );\n}\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 10px;\n  border: transparent;\n  background: #909090;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  font-size: 16px;\n  box-shadow: 0px 5px 2px #707070;\n  &:active {\n    transform: translateY(2px);\n    box-shadow: 0px 3px 2px #888888;\n  }\n`;\n\nexport default Button;\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  getPostAPI,\n  getPostsAPI,\n  getLimitedPostsAPI,\n  addPostAPI,\n  editPostAPI,\n  deletePostAPI,\n} from '../WebAPI';\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoading: false,\n    totalPostNumber: null,\n    posts: [],\n    post: null,\n    newPostResponse: null,\n    errorMessage: null,\n  },\n\n  reducers: {\n    setIsLoading(state, action) {\n      state.isLoading = action.payload;\n    },\n    setPost(state, action) {\n      state.post = action.payload;\n    },\n    setTotalPostsNumber(state, action) {\n      state.totalPostNumber = action.payload.length;\n    },\n    setPosts(state, action) {\n      state.posts = action.payload;\n    },\n    setNewPostResponse(state, action) {\n      state.newPostResponse = action.payload;\n    },\n    setErrorMessage(state, action) {\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const selectPost = (store) => store.posts.post;\nexport const selectPosts = (store) => store.posts.posts;\nexport const selectIsLoading = (store) => store.posts.isLoading;\nexport const selectNewPostResponse = (store) => store.posts.newPostResponse;\nexport const selectErrorMessage = (store) => store.posts.errorMessage;\nexport const selectTotalPostsNumber = (store) => store.posts.totalPostNumber;\n\nexport const {\n  setPost,\n  setPosts,\n  setIsLoading,\n  setErrorMessage,\n  setTotalPostsNumber,\n  setNewPostResponse,\n} = postsSlice.actions;\n\nexport const getPosts = () => (dispatch) =>\n  getPostsAPI().then((res) => dispatch(setTotalPostsNumber(res)));\n\nexport const getLimitedPosts = (page, limit) => async (dispatch) => {\n  dispatch(setIsLoading(true));\n  await getPostsAPI().then((res) => dispatch(setTotalPostsNumber(res)));\n  getLimitedPostsAPI(page, limit).then((res) => {\n    dispatch(setPosts(res));\n    dispatch(setIsLoading(false));\n  });\n};\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoading(true));\n  return getPostAPI(id).then((res) => {\n    dispatch(setPost(res[0]));\n    dispatch(setIsLoading(false));\n    return res[0];\n  });\n};\n\nexport const addPost = (data) => (dispatch) => {\n  dispatch(setIsLoading(true));\n  return addPostAPI(data).then((res) => {\n    dispatch(setNewPostResponse(res));\n    dispatch(setIsLoading(false));\n    return res;\n  });\n};\n\nexport const editPost = (data) => () => editPostAPI(data);\n\nexport const deletePost = (id) => () => deletePostAPI(id).then((res) => res);\n\nexport default postsSlice.reducer;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserId } from '../../redux/userSlice';\nimport { deletePost, getLimitedPosts } from '../../redux/postsSlice';\n\nconst PostContainer = styled.div`\n  padding: 20px;\n  margin: 10px 0;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 24px;\n  word-break: break-all;\n`;\n\nconst PostDate = styled.div`\n  color: #707070;\n`;\n\nconst PostBody = styled.div`\n  margin-top: 20px;\n  word-break: break-all;\n`;\n\nconst PostInfo = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nconst PostButton = styled(Button)`\n  margin: 10px 20px 10px 0px;\n`;\n\nexport default function Post({ post }) {\n  const userId = useSelector(selectUserId);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleEditPost = (id) => () => navigate(`/react-blog/post/edit/${id}`);\n\n  const handleDeletePost = (postId) => () =>\n    dispatch(deletePost(postId)).then((res) => {\n      if (res.ok === 0) return;\n      dispatch(getLimitedPosts(1, 5));\n      navigate('/react-blog');\n    });\n\n  return (\n    <PostContainer>\n      <PostTitle>\n        {userId === post.userId\n          ? '[我的文章] '\n          : `[${post.user.nickname}的文章] `}\n        {post.title}\n      </PostTitle>\n      <PostInfo>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n        {userId === post.userId ? (\n          <>\n            <PostButton onClick={handleEditPost(post.id)}>編輯</PostButton>\n            <PostButton onClick={handleDeletePost(post.id)}> 刪除</PostButton>\n          </>\n        ) : null}\n      </PostInfo>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { ReactComponent as Bean } from '../../images/bean.svg';\n\nconst LoadingWrapper = styled.div`\n  padding-top: 150px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport default function Loading() {\n  return (\n    <LoadingWrapper>\n      <Bean />\n    </LoadingWrapper>\n  );\n}\n","import styled from 'styled-components';\r\nimport Post from '../../components/Post';\r\nimport Loading from '../../components/Loading';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getLimitedPosts,\r\n  selectPosts,\r\n  selectIsLoading,\r\n} from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  margin: 25px 10vw 0;\r\n  min-height: calc(100vh - 123px);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 45px 0 0 0;\r\n`;\r\n\r\nconst LatestPosts = ({ posts }) =>\r\n  posts.slice(0, 5).map((post) => <Post key={post.id} post={post} />);\r\n\r\nexport default function HomePage() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const posts = useSelector(selectPosts);\r\n  useEffect(() => dispatch(getLimitedPosts(1, 5)), [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Title>最新文章</Title>\r\n          <LatestPosts posts={posts} />\r\n        </>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  height: auto;\n  min-height: 290px;\n  max-width: ${(props) => props.$width}px;\n  margin: 35px auto 0;\n  padding: ${(props) =>\n    props.$paddingType === 'post' ? '10px 30px 30px 30px' : '20px'};\n  background: whitesmoke;\n  transition: all linear 0.2s;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  &:hover {\n    transition: all linear 0.2s;\n    box-shadow: 1px 2px 6px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport default Form;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst InputWrapper = styled.div`\n  margin: 20px 0;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  padding: 5px 10px;\n  border-bottom: 1px solid #909090;\n  background: transparent;\n  letter-spacing: 5px;\n  color: #808080;\n  font-size: 16px;\n`;\n\nexport default function UserInput({\n  type,\n  value,\n  title,\n  handleInputFocus,\n  handleInputChange,\n}) {\n  return (\n    <InputWrapper>\n      {title}\n      <Input\n        type={type}\n        value={value}\n        onFocus={handleInputFocus}\n        onChange={handleInputChange}\n      />\n    </InputWrapper>\n  );\n}\n\nUserInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleInputFocus: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst TogglePasswordWrapper = styled.div`\n  margin-top: 20px;\n`;\n\nconst TogglePasswordLabel = styled.label`\n  margin-left: 10px;\n`;\n\nexport default function Input({ togglePassword }) {\n  return (\n    <TogglePasswordWrapper>\n      <input type=\"checkbox\" onClick={togglePassword} id=\"password\" />\n      <TogglePasswordLabel htmlFor=\"password\">顯示密碼 </TogglePasswordLabel>\n    </TogglePasswordWrapper>\n  );\n}\n\nInput.propTypes = {\n  togglePassword: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin: 10px 0;\n  height: ${(props) => props.$height}px;\n  display: ${(props) => (props.errorMessage ? '1' : 'hidden')};\n`;\n\nexport default ErrorMessage","import styled from 'styled-components';\nimport Form from '../../components/Form';\nimport Button from '../../components/Button';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserInput, TogglePasswordInput } from '../../components/Input';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport {\n  setUserErrorMessage,\n  selectIsUserLoading,\n  selectUserErrorMessage,\n  login,\n} from '../../redux/userSlice';\n\n\nconst Root = styled.div`\n  margin: 0 10vw;\n  min-height: calc(100vh - 143px);\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n`;\n\nconst Loading = styled.div`\n  margin: 40px auto;\n  color: #909090;\n`;\n\nconst SubmitButton = styled(Button)`\n  margin: 30px auto 10px;\n`;\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const userErrorMessage = useSelector(selectUserErrorMessage);\n  const isUserLoading = useSelector(selectIsUserLoading);\n  const setError = () => dispatch(setUserErrorMessage(null));\n  const setValue = (setState) => (e) => setState(e.target.value);\n  const togglePassword = () => setShowPassword(showPassword ? false : true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login({ username, password })).then((userId) => {\n      if (userId) navigate('/react-blog');\n    });\n  };\n\n  useEffect(() => () => dispatch(setUserErrorMessage(null)), [dispatch]);\n\n  return (\n    <Root>\n      <Form onSubmit={handleSubmit} $width={350}>\n        <Title>請登入部落格</Title>\n        <UserInput\n          type={'text'}\n          title={'帳號：'}\n          value={username}\n          handleInputFocus={setError}\n          handleInputChange={setValue(setUsername)}\n        />\n        <UserInput\n          type={showPassword ? 'text' : 'password'}\n          title={'密碼：'}\n          value={password}\n          handleInputFocus={setError}\n          handleInputChange={setValue(setPassword)}\n        />\n\n        <TogglePasswordInput togglePassword={togglePassword} />\n\n        {isUserLoading ? (\n          <Loading>Loading...</Loading>\n        ) : (\n          <>\n            <ErrorMessage errorMessage={userErrorMessage} $height={15}>\n              {userErrorMessage}\n            </ErrorMessage>\n            <SubmitButton>登入</SubmitButton>\n          </>\n        )}\n      </Form>\n    </Root>\n  );\n}\n","import styled from 'styled-components';\nimport Form from '../../components/Form';\nimport Button from '../../components/Button';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserId } from '../../redux/userSlice';\nimport {\n  addPost,\n  setErrorMessage,\n  selectErrorMessage,\n  selectIsLoading,\n} from '../../redux/postsSlice';\n\nconst Root = styled.div`\n  margin-top: 30px;\n  min-height: calc(100vh - 143px);\n`;\n\nconst TitleWrapper = styled.div`\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 28px;\n  margin: 0px;\n`;\n\nconst InputWrapper = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputHeader = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst TitleInput = styled.input`\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #808080;\n  outline: none;\n  font-size: 16px;\n`;\n\nconst BodyInput = styled.textarea`\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #808080;\n  outline: none;\n  height: 150px;\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  font-size: 16px;\n`;\n\nconst Loading = styled.div`\n  margin: 20px 0 10px 0;\n  color: #909090;\n`;\n\nconst SubmitButton = styled(Button)`\n  margin: 10px auto;\n`;\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const errorMessage = useSelector(selectErrorMessage);\n  const isLoading = useSelector(selectIsLoading);\n  const userId = useSelector(selectUserId);\n  const setError = () => dispatch(setErrorMessage(null));\n  const controlInput = (setValue) => (e) => setValue(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addPost({ title, body })).then((newPostResponse) => {\n      if (!newPostResponse.id) {\n        return dispatch(setErrorMessage(newPostResponse.message));\n      }\n      navigate('/react-blog/post/' + newPostResponse.id);\n    });\n  };\n\n  useEffect(() => {\n    if (!userId) navigate('/react-blog');\n  }, [userId, navigate]);\n\n  return (\n    <Root>\n      <Form onSubmit={handleSubmit} $width={460} $paddingType={'post'}>\n        <TitleWrapper>\n          <Title>新文章</Title>\n        </TitleWrapper>\n\n        <InputWrapper>\n          <InputHeader>標題：</InputHeader>\n          <TitleInput\n            value={title}\n            onChange={controlInput(setTitle)}\n            onFocus={setError}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <InputHeader>內容：</InputHeader>\n          <BodyInput\n            value={body}\n            col=\"20\"\n            onChange={controlInput(setBody)}\n            onFocus={setError}\n          />\n        </InputWrapper>\n\n        {isLoading ? (\n          <Loading>Loading...</Loading>\n        ) : (\n          <>\n            <SubmitButton>送出文章</SubmitButton>\n            {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n          </>\n        )}\n      </Form>\n    </Root>\n  );\n}\n","import styled from 'styled-components';\nimport Button from '../../components/Button';\nimport Form from '../../components/Form';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { selectUserId } from '../../redux/userSlice';\nimport {\n  editPost,\n  getPost,\n  setErrorMessage,\n  selectErrorMessage,\n} from '../../redux/postsSlice';\n\nconst Root = styled.div`\n  margin-top: 30px;\n  min-height: calc(100vh - 143px);\n`;\n\nconst TitleWrapper = styled.div`\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 28px;\n  margin: 0px;\n`;\n\nconst InputWrapper = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputHeader = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst TitleInput = styled.input`\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #808080;\n  outline: none;\n  font-size: 16px;\n`;\n\nconst BodyInput = styled.textarea`\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #808080;\n  outline: none;\n  height: 150px;\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  font-size: 16px;\n`;\n\nconst SubmitButton = styled(Button)`\n  margin: 10px auto;\n`;\n\nexport default function EditPostPage() {\n  const { id } = useParams();\n  const userId = useSelector(selectUserId);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const errorMessage = useSelector(selectErrorMessage);\n  const setError = () => dispatch(setErrorMessage(null));\n  const controlInput = (setValue) => (e) => setValue(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!title || !body || title.trim() === '' || body.trim() === '') {\n      return dispatch(setErrorMessage('不能空白哦'));\n    }\n    dispatch(editPost({ id, title, body }));\n    navigate('/react-blog/post/' + id);\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id)).then((res) => {\n      if (res.userId !== userId) return navigate('/react-blog/');\n      setTitle(res.title);\n      setBody(res.body);\n    });\n  }, [dispatch, navigate, id, userId]);\n\n  return (\n    <Root>\n      <Form onSubmit={handleSubmit} $width={460} $paddingType={'post'}>\n        <TitleWrapper>\n          <Title>編輯文章 #{id}</Title>\n        </TitleWrapper>\n\n        <InputWrapper>\n          <InputHeader>標題：</InputHeader>\n          <TitleInput\n            value={title}\n            onChange={controlInput(setTitle)}\n            onFocus={setError}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <InputHeader>內容：</InputHeader>\n          <BodyInput\n            value={body}\n            onChange={controlInput(setBody)}\n            onFocus={setError}\n          />\n        </InputWrapper>\n\n        <SubmitButton>送出文章</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Root>\n  );\n}\n","import styled from 'styled-components';\nimport Post from '../../components/Post';\nimport Loading from '../../components/Loading';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPost, selectIsLoading, selectPost } from '../../redux/postsSlice';\n\nconst Root = styled.div`\n  margin: 0 10vw;\n  min-height: calc(100vh - 123px);\n`;\n\nexport default function PostPage() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const post = useSelector(selectPost);\n  useEffect(() => dispatch(getPost(id)), [dispatch, id]);\n\n  return <Root>{!isLoading && post ? <Post post={post} /> : <Loading />}</Root>;\n}\n","import styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { getLimitedPosts } from '../../redux/postsSlice';\nimport PropTypes from 'prop-types';\n\nconst PaginationContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Pages = styled.div`\n  display: flex;\n`;\n\nconst Page = styled.a`\n  margin: 0 15px;\n`;\n\nconst PaginationDescription = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport default function Pagination({\n  pagination,\n  limit,\n  totalPostsNumber,\n  currentPage,\n  setCurrentPage,\n}) {\n  const dispatch = useDispatch();\n  const handleClickPage = (page) => () => {\n    dispatch(getLimitedPosts(page, limit));\n    setCurrentPage(page);\n  };\n\n  return (\n    <PaginationContainer>\n      <PaginationDescription>\n        {`共有 ${totalPostsNumber} 篇文章，目前在第 ${currentPage} 頁`}\n      </PaginationDescription>\n      <Pages>\n        {pagination.map((page) => (\n          <Page key={page} onClick={handleClickPage(page)} children={page} />\n        ))}\n      </Pages>\n    </PaginationContainer>\n  );\n}\n\nPagination.propTypes = {\n  pagination: PropTypes.array.isRequired,\n  limit: PropTypes.number.isRequired,\n  getData: PropTypes.func.isRequired,\n  setValue: PropTypes.func.isRequired,\n  totalPostsNumber: PropTypes.number,\n  currentPage: PropTypes.number,\n  setCurrentPage: PropTypes.func,\n};\n","import { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Pagination from '../../components/Pagination';\r\nimport Loading from '../../components/Loading';\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoint';\r\nimport {\r\n  getLimitedPosts,\r\n  selectTotalPostsNumber,\r\n  selectIsLoading,\r\n  selectPosts,\r\n  setPosts,\r\n} from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  min-height: 90vh;\r\n  margin-top: 20px;\r\n  margin: 45px 10vw;\r\n  ${MEDIA_QUERY_MD} {\r\n    margin: 0 10vw;\r\n  }\r\n`;\r\n\r\nconst PostsContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 20px;\r\n  display: flex;\r\n  algin-items: flex-end;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  ${MEDIA_QUERY_MD} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 20px;\r\n  ${MEDIA_QUERY_MD} {\r\n    padding-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: #707070;\r\n`;\r\n\r\nfunction PostItem({ post }) {\r\n  return (\r\n    <PostsContainer>\r\n      <PostTitle to={`/react-blog/post/${post.id}`}>\r\n        {post.user.nickname.length > 10\r\n          ? `[${post.user.nickname.slice(0, 9)}...的文章] `\r\n          : `[${post.user.nickname}的文章] `}\r\n        {post.title.length > 20\r\n          ? `${post.title.slice(0, 20)}...`\r\n          : `${post.title}`}\r\n      </PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n    </PostsContainer>\r\n  );\r\n}\r\n\r\nexport default function PostsPage() {\r\n  const [pagination, setPagination] = useState([]);\r\n  const pages = useRef();\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const posts = useSelector(selectPosts);\r\n  const totalPostsNumber = useSelector(selectTotalPostsNumber);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLimitedPosts(1, 5));\r\n    pages.current = Math.ceil(totalPostsNumber / 5);\r\n    setPagination(Array.from({ length: pages.current }).map((_, i) => i + 1));\r\n  }, [dispatch, totalPostsNumber]);\r\n\r\n  return (\r\n    <Root>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {posts[0] &&\r\n            posts.map((post) => {\r\n              return <PostItem key={post.id} post={post} />;\r\n            })}\r\n\r\n          <Pagination\r\n            totalPostsNumber={totalPostsNumber}\r\n            pagination={pagination}\r\n            limit={5}\r\n            getData={getLimitedPosts}\r\n            setValue={setPosts}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        </>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserInput, TogglePasswordInput } from '../../components/Input';\nimport styled from 'styled-components';\nimport Form from '../../components/Form';\nimport Button from '../../components/Button';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nimport {\n  setUserErrorMessage,\n  selectIsUserLoading,\n  selectUserErrorMessage,\n  register,\n} from '../../redux/userSlice';\n\nconst Root = styled.div`\n  margin: 0 10vw;\n  min-height: calc(100vh - 143px);\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n`;\n\nconst Loading = styled.div`\n  margin: 40px auto;\n  color: #909090;\n`;\n\nconst SubmitButton = styled(Button)`\n  margin: 10px auto;\n`;\n\nexport default function RegisterPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const isUserLoading = useSelector(selectIsUserLoading);\n  const userErrorMessage = useSelector(selectUserErrorMessage);\n  const setError = () => dispatch(setUserErrorMessage(null));\n  const setValue = (setState) => (e) => setState(e.target.value);\n  const togglePassword = () => setShowPassword(showPassword ? false : true);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(register({ nickname, username, password })).then((userId) => {\n      if (userId) navigate('/react-blog');\n    });\n  };\n\n  useEffect(() => () => dispatch(setUserErrorMessage(null)), [dispatch]);\n\n  return (\n    <Root>\n      <Form onSubmit={handleSubmit} $width={360}>\n        <Title>註冊新帳號</Title>\n\n        <UserInput\n          type={'text'}\n          title={'暱稱：'}\n          value={nickname}\n          handleInputFocus={setError}\n          handleInputChange={setValue(setNickname)}\n        />\n\n        <UserInput\n          type={'text'}\n          title={'帳號：'}\n          value={username}\n          handleInputFocus={setError}\n          handleInputChange={setValue(setUsername)}\n        />\n\n        <UserInput\n          type={showPassword ? 'text' : 'password'}\n          title={'密碼：'}\n          value={password}\n          handleInputFocus={setError}\n          handleInputChange={setValue(setPassword)}\n        />\n\n        <TogglePasswordInput togglePassword={togglePassword} />\n\n        {isUserLoading ? (\n          <Loading>Loading...</Loading>\n        ) : (\n          <>\n            <ErrorMessage errorMessage={userErrorMessage} $height={35}>\n              {userErrorMessage}\n            </ErrorMessage>\n            <SubmitButton>註冊</SubmitButton>\n          </>\n        )}\n      </Form>\n    </Root>\n  );\n}\n","import { useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Navbar from '../Navbar';\nimport { useDispatch } from 'react-redux';\nimport { getMe } from '../../redux/userSlice';\nimport {\n  AboutMePage,\n  LoginPage,\n  HomePage,\n  NewPostPage,\n  PostPage,\n  PostsPage,\n  EditPostPage,\n  RegisterPage,\n} from '../../pages/';\n\nconst Root = styled.div`\n  padding-top: 84px;\n  height: 100%;\n`;\n\nconst Footer = styled.div`\n  background: rgb(49 49 49);\n  padding: 6px 0;\n  width: 100%;\n  color: whitesmoke;\n  text-align: center;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <BrowserRouter>\n        <Navbar />\n        <Routes basename=\"/react-blog\">\n          <Route path={'/'} element={<HomePage />} />\n          <Route path={'/register'} element={<RegisterPage />} />\n          <Route path={'/login'} element={<LoginPage />} />\n          <Route path={'/posts'} element={<PostsPage />} />\n          <Route path={'/post/:id'} element={<PostPage />} />\n          <Route path={'/post/edit/:id'} element={<EditPostPage />} />\n          <Route path={'/new-post'} element={<NewPostPage />} />\n          <Route path={'/about-me'} element={<AboutMePage />} />\n        </Routes>\n        <Footer>Made with ❤️ by Nicolas</Footer>\n      </BrowserRouter>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport postReducer from './postsSlice';\nimport userReducer from './userSlice';\n\nconst store = configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import 'normalize.css';\nimport './style/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}