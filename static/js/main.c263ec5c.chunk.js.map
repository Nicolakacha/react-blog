{"version":3,"sources":["constants/breakpoint.js","utils.js","WebAPI.js","redux/userSlice.js","components/Navbar/Navbar.js","pages/AboutMePage/AboutMePage.js","components/Button/Button.js","redux/postsSlice.js","components/Post/Post.js","images/bean.svg","components/Loading/Loading.js","pages/HomePage/HomePage.js","components/Form/Form.js","components/Input/UserInput.js","components/Input/TogglePasswordInput.js","components/ErrorMessage/ErrorMessage.js","pages/LoginPage/LoginPage.js","pages/NewPostPage/NewPostPage.js","pages/EditPostPage/EditPostPage.js","pages/PostPage/PostPage.js","components/Pagination/Pagination.js","pages/PostsPage/PostsPage.js","pages/RegisterPage/RegisterPage.js","components/App/App.js","redux/store.js","index.js"],"names":["MEDIA_QUERY_MD","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPostsAPI","fetch","then","res","json","getLimitedPostsAPI","page","limit","loginAPI","user","username","password","method","headers","body","JSON","stringify","registerAPI","nickname","userSlice","createSlice","name","initialState","userId","userErrorMessage","isUserLoading","reducers","setIsUserLoading","state","action","payload","setUserId","setUserErrorMessage","selectUserId","store","selectIsUserLoading","selectUserErrorMessage","actions","checkToken","dispatch","ok","console","log","message","getMe","authorization","getMeAPI","data","id","NavbarContainer","styled","div","NavbarList","Brand","Link","Nav","NavLink","Logout","a","Navbar","useDispatch","navigate","useNavigate","useSelector","isUserloading","to","children","onClick","alert","Root","Container","Title","h1","Content","AboutMePage","Button","button","postsSlice","isLoading","totalPostNumber","posts","post","newPostResponse","errorMessage","setIsLoading","setPost","setTotalPostsNumber","length","setPosts","setNewPostResponse","setErrorMessage","selectPost","selectPosts","selectIsLoading","selectErrorMessage","selectTotalPostsNumber","getLimitedPosts","getPost","getPostAPI","addPost","title","addPostAPI","editPost","editPostAPI","deletePost","deletePostAPI","PostContainer","PostTitle","h2","PostDate","PostBody","PostInfo","PostButton","Post","postId","Date","createdAt","toLocaleString","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","cy","r","fill","attributeName","repeatCount","dur","values","keyTimes","begin","_ref3","transform","d","type","SvgBean","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","ForwardRef","LoadingWrapper","Loading","LatestPosts","slice","map","HomePage","useEffect","Form","form","$width","$paddingType","InputWrapper","Input","input","UserInput","value","handleInputFocus","handleInputChange","onFocus","onChange","TogglePasswordWrapper","TogglePasswordLabel","label","togglePassword","htmlFor","ErrorMessage","$height","SubmitButton","LoginPage","useState","setUsername","setPassword","showPassword","setShowPassword","setError","setValue","setState","e","onSubmit","preventDefault","TitleWrapper","InputHeader","TitleInput","BodyInput","textarea","NewPostPage","setTitle","setBody","controlInput","col","EditPostPage","useParams","trim","href","PostPage","PaginationContainer","Pages","Page","PaginationDescription","Pagination","pagination","totalPostsNumber","currentPage","setCurrentPage","handleClickPage","PostsContainer","PostItem","PostsPage","setPagination","pages","useRef","current","Math","ceil","Array","from","_","getData","RegisterPage","setNickname","Footer","App","basename","path","element","configureStore","reducer","postReducer","userReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c263ec5c.chunk.js","sourcesContent":["export const MEDIA_QUERY_MD = '@media screen and (min-width: 768px)';\r\nexport const MEDIA_QUERY_LG = '@media screen and (min-width: 1024px)';","const TOKEN_NAME = 'token';\r\n\r\nexport const setAuthToken = (token) => {\r\n  return localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from './utils';\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\n\r\nexport const getPostsAPI = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getLimitedPostsAPI = (page, limit) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc&_expand=user`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const getPostAPI = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) => res.json());\r\n};\r\n\r\nexport const addPostAPI = ({ title, body }) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const editPostAPI = ({ title, body, id }) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deletePostAPI = (id) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: { authorization: `Bearer ${token}` },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const loginAPI = (user) => {\r\n  const { username, password } = user;\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const registerAPI = (user) => {\r\n  const { nickname, username, password } = user;\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMeAPI = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loginAPI, registerAPI, getMeAPI } from '../WebAPI';\r\nimport { setAuthToken, getAuthToken } from '../utils';\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    userId: null,\r\n    userErrorMessage: null,\r\n    isUserLoading: false,\r\n  },\r\n\r\n  reducers: {\r\n    setIsUserLoading(state, action) {\r\n      state.isUserLoading = action.payload;\r\n    },\r\n    setUserId(state, action) {\r\n      state.userId = action.payload;\r\n    },\r\n    setUserErrorMessage(state, action) {\r\n      state.userErrorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectUserId = (store) => store.user.userId;\r\nexport const selectIsUserLoading = (store) => store.user.isUserLoading;\r\nexport const selectUserErrorMessage = (store) => store.user.userErrorMessage;\r\n\r\nexport const {\r\n  setIsUserLoading,\r\n  setUserId,\r\n  setUserErrorMessage,\r\n} = userSlice.actions;\r\n\r\nconst checkToken = (res, dispatch) => {\r\n  if (res.ok === 1) {\r\n    return setAuthToken(res.token);\r\n  }\r\n  console.log(res)\r\n  dispatch(setUserErrorMessage(res.message));\r\n};\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  dispatch(setIsUserLoading(true));\r\n  await loginAPI(user).then((res) => checkToken(res, dispatch));\r\n  return dispatch(getMe());\r\n};\r\n\r\nexport const register = (user) => async (dispatch) => {\r\n  dispatch(setIsUserLoading(true));\r\n  await registerAPI(user).then((res) => checkToken(res, dispatch));\r\n  return dispatch(getMe());\r\n};\r\n\r\nexport const getMe = () => (dispatch) => {\r\n  dispatch(setIsUserLoading(true));\r\n  if (getAuthToken()) {\r\n    return getMeAPI().then((res) => {\r\n      dispatch(setIsUserLoading(false));\r\n      if (res.ok !== 1) {\r\n        setAuthToken(null);\r\n        return;\r\n      }\r\n      dispatch(setUserId(res.data.id));\r\n      return res.data.id;\r\n    });\r\n  }\r\n  dispatch(setIsUserLoading(false));\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  setAuthToken('');\r\n  dispatch(setUserId(null));\r\n  alert('登出成功');\r\n};\r\n\r\nexport default userSlice.reducer;\r\n","import { Link, NavLink, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoint';\r\nimport styled from 'styled-components';\r\nimport {\r\n  logout,\r\n  selectUserId,\r\n  selectIsUserLoading,\r\n} from '../../redux/userSlice';\r\n\r\nconst NavbarContainer = styled.div`\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.5);\r\n  padding: 0px 5vw;\r\n  background: white;\r\n  flex-direction: column;\r\n  ${MEDIA_QUERY_MD} {\r\n    height: 64px;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Brand = styled(Link)`\r\n  font-size: 32px;\r\n  color: #017a75;\r\n  margin-top: 10px;\r\n  -webkit-tap-highlight-color: transparent;\r\n  ${MEDIA_QUERY_MD} {\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nconst Nav = styled(NavLink)`\r\n  display: flex;\r\n  margin: 0 6px;\r\n  align-items: center;\r\n  height: 64px;\r\n  -webkit-tap-highlight-color: transparent;\r\n  ${MEDIA_QUERY_MD} {\r\n    margin: 0 30px;\r\n  }\r\n`;\r\n\r\nconst Logout = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 6px;\r\n  height: 64px;\r\n  ${MEDIA_QUERY_MD} {\r\n    margin: 0 30px;\r\n  }\r\n`;\r\n\r\nexport default function Navbar() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const userId = useSelector(selectUserId);\r\n  const isUserloading = useSelector(selectIsUserLoading);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    navigate('/react-blog');\r\n  };\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      <Brand to=\"/react-blog\" children=\"React Blog\" />\r\n      <NavbarList>\r\n        <Nav to=\"/react-blog/about-me\" children=\"關於我\" />\r\n        <Nav to=\"/react-blog/posts\" children=\"文章列表\" />\r\n        {isUserloading ? (\r\n          <Nav to=\"/\" children=\"檢查登入資訊中\" />\r\n        ) : (\r\n          <>\r\n            {userId && <Nav to=\"/react-blog/new-post\" children=\"發表文章\" />}\r\n            {userId && <Logout onClick={handleLogout} children=\"登出\" />}\r\n            {!userId && <Nav to=\"/react-blog/login\" children=\"登入\" />}\r\n            {!userId && <Nav to=\"/react-blog/register\" children=\"註冊\" />}\r\n          </>\r\n        )}\r\n      </NavbarList>\r\n    </NavbarContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n  margin: 0 10vw;\r\n  height: calc(100vh - 133px);\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-width: 600px;\r\n  height: 400px;\r\n  margin: 50px auto 0;\r\n  padding: 20px;\r\n  background: rgba(210, 210, 210, 0.4);\r\n  text-align: center;\r\n  transition: all linear 0.2s;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\r\n  &:hover {\r\n    transition: all linear 0.2s;\r\n    box-shadow: 1px 2px 6px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 36px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-align: left;\r\n`;\r\n\r\nexport default function AboutMePage() {\r\n  return (\r\n    <Root>\r\n      <Container>\r\n        <Title>A Simple Blog</Title>\r\n        <Content>\r\n          利用 React 實作 SPA 部落格～\r\n          <br/><br/>\r\n          從文學到程式，對各種領域充滿好奇，參與 Lidemy 程式導師計畫自此打開程式開發的大門，認為網路是超棒的知識載體，以不斷成長的前端工程師為目標，並期許自己在渴望新事物的同時，也能成為帶來新事物的人。\r\n        </Content>\r\n      </Container>\r\n    </Root>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  border: transparent;\r\n  background: #909090;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  box-shadow: 0px 5px 2px #707070;\r\n  &:active {\r\n    transform: translateY(2px);\r\n    box-shadow: 0px 3px 2px #888888;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  getPostAPI,\r\n  getPostsAPI,\r\n  getLimitedPostsAPI,\r\n  addPostAPI,\r\n  editPostAPI,\r\n  deletePostAPI,\r\n} from '../WebAPI';\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    isLoading: false,\r\n    totalPostNumber: null,\r\n    posts: [],\r\n    post: null,\r\n    newPostResponse: null,\r\n    errorMessage: null,\r\n  },\r\n\r\n  reducers: {\r\n    setIsLoading(state, action) {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setPost(state, action) {\r\n      state.post = action.payload;\r\n    },\r\n    setTotalPostsNumber(state, action) {\r\n      state.totalPostNumber = action.payload.length;\r\n    },\r\n    setPosts(state, action) {\r\n      state.posts = action.payload;\r\n    },\r\n    setNewPostResponse(state, action) {\r\n      state.newPostResponse = action.payload;\r\n    },\r\n    setErrorMessage(state, action) {\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectPost = (store) => store.posts.post;\r\nexport const selectPosts = (store) => store.posts.posts;\r\nexport const selectIsLoading = (store) => store.posts.isLoading;\r\nexport const selectNewPostResponse = (store) => store.posts.newPostResponse;\r\nexport const selectErrorMessage = (store) => store.posts.errorMessage;\r\nexport const selectTotalPostsNumber = (store) => store.posts.totalPostNumber;\r\n\r\nexport const {\r\n  setPost,\r\n  setPosts,\r\n  setIsLoading,\r\n  setErrorMessage,\r\n  setTotalPostsNumber,\r\n  setNewPostResponse,\r\n} = postsSlice.actions;\r\n\r\nexport const getPosts = () => (dispatch) =>\r\n  getPostsAPI().then((res) => dispatch(setTotalPostsNumber(res)));\r\n\r\nexport const getLimitedPosts = (page, limit) => async (dispatch) => {\r\n  dispatch(setIsLoading(true));\r\n  await getPostsAPI().then((res) => dispatch(setTotalPostsNumber(res)));\r\n  getLimitedPostsAPI(page, limit).then((res) => {\r\n    dispatch(setPosts(res));\r\n    dispatch(setIsLoading(false));\r\n  });\r\n};\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  dispatch(setIsLoading(true));\r\n  return getPostAPI(id).then((res) => {\r\n    dispatch(setPost(res[0]));\r\n    dispatch(setIsLoading(false));\r\n    return res[0];\r\n  });\r\n};\r\n\r\nexport const addPost = (data) => (dispatch) => {\r\n  dispatch(setIsLoading(true));\r\n  return addPostAPI(data).then((res) => {\r\n    dispatch(setNewPostResponse(res));\r\n    dispatch(setIsLoading(false));\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const editPost = (data) => () => editPostAPI(data);\r\n\r\nexport const deletePost = (id) => () => deletePostAPI(id).then((res) => res);\r\n\r\nexport default postsSlice.reducer;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUserId } from '../../redux/userSlice';\r\nimport { deletePost, getLimitedPosts } from '../../redux/postsSlice';\r\n\r\nconst PostContainer = styled.div`\r\n  padding: 20px;\r\n  margin: 10px 0;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PostTitle = styled.h2`\r\n  font-size: 24px;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: #707070;\r\n`;\r\n\r\nconst PostBody = styled.div`\r\n  margin-top: 20px;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst PostInfo = styled.div`\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst PostButton = styled(Button)`\r\n  margin: 10px 20px 10px 0px;\r\n`;\r\n\r\nexport default function Post({ post }) {\r\n  const userId = useSelector(selectUserId);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const handleEditPost = (id) => () => navigate(`/react-blog/post/edit/${id}`);\r\n\r\n  const handleDeletePost = (postId) => () =>\r\n    dispatch(deletePost(postId)).then((res) => {\r\n      if (res.ok === 0) return;\r\n      dispatch(getLimitedPosts(1, 5));\r\n      navigate('/react-blog');\r\n    });\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle>\r\n        {userId === post.userId\r\n          ? '[我的文章] '\r\n          : `[${post.user.nickname}的文章] `}\r\n        {post.title}\r\n      </PostTitle>\r\n      <PostInfo>\r\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n        {userId === post.userId ? (\r\n          <>\r\n            <PostButton onClick={handleEditPost(post.id)}>編輯</PostButton>\r\n            <PostButton onClick={handleDeletePost(post.id)}> 刪除</PostButton>\r\n          </>\r\n        ) : null}\r\n      </PostInfo>\r\n      <PostBody>{post.body}</PostBody>\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 50,\n  r: 4,\n  fill: \"#d7adb0\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"cx\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"95;35\",\n  keyTimes: \"0;1\",\n  begin: \"-0.67s\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0;1;1\",\n  keyTimes: \"0;0.2;1\",\n  begin: \"-0.67s\"\n})), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 50,\n  r: 4,\n  fill: \"#d7adb0\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"cx\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"95;35\",\n  keyTimes: \"0;1\",\n  begin: \"-0.33s\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0;1;1\",\n  keyTimes: \"0;0.2;1\",\n  begin: \"-0.33s\"\n})), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 50,\n  r: 4,\n  fill: \"#d7adb0\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"cx\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"95;35\",\n  keyTimes: \"0;1\",\n  begin: \"0s\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0;1;1\",\n  keyTimes: \"0;0.2;1\",\n  begin: \"0s\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-15 0)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50 50L20 50A30 30 0 0 0 80 50Z\",\n  fill: \"#d7d3d0\",\n  transform: \"rotate(90 50 50)\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50 50L20 50A30 30 0 0 0 80 50Z\",\n  fill: \"#d7d3d0\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0 50 50;45 50 50;0 50 50\",\n  keyTimes: \"0;0.5;1\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50 50L20 50A30 30 0 0 1 80 50Z\",\n  fill: \"#d7d3d0\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0 50 50;-45 50 50;0 50 50\",\n  keyTimes: \"0;0.5;1\"\n})));\n\nfunction SvgBean(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"136px\",\n    height: \"136px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBean);\nexport default __webpack_public_path__ + \"static/media/bean.f2665f75.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { ReactComponent as Bean } from '../../images/bean.svg';\r\n\r\nconst LoadingWrapper = styled.div`\r\n  padding-top: 150px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <LoadingWrapper>\r\n      <Bean />\r\n    </LoadingWrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport Post from '../../components/Post';\r\nimport Loading from '../../components/Loading';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getLimitedPosts,\r\n  selectPosts,\r\n  selectIsLoading,\r\n} from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  margin: 25px 10vw 0;\r\n  min-height: calc(100vh - 123px);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 45px 0 0 0;\r\n`;\r\n\r\nconst LatestPosts = ({ posts }) =>\r\n  posts.slice(0, 5).map((post) => <Post key={post.id} post={post} />);\r\n\r\nexport default function HomePage() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const posts = useSelector(selectPosts);\r\n  useEffect(() => dispatch(getLimitedPosts(1, 5)), [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Title>最新文章</Title>\r\n          <LatestPosts posts={posts} />\r\n        </>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  height: auto;\r\n  min-height: 290px;\r\n  max-width: ${(props) => props.$width}px;\r\n  margin: 35px auto 0;\r\n  padding: ${(props) =>\r\n    props.$paddingType === 'post' ? '10px 30px 30px 30px' : '20px'};\r\n  background: whitesmoke;\r\n  transition: all linear 0.2s;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\r\n  &:hover {\r\n    transition: all linear 0.2s;\r\n    box-shadow: 1px 2px 6px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputWrapper = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  padding: 5px 10px;\r\n  border-bottom: 1px solid #909090;\r\n  background: transparent;\r\n  letter-spacing: 5px;\r\n  color: #808080;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport default function UserInput({\r\n  type,\r\n  value,\r\n  title,\r\n  handleInputFocus,\r\n  handleInputChange,\r\n}) {\r\n  return (\r\n    <InputWrapper>\r\n      {title}\r\n      <Input\r\n        type={type}\r\n        value={value}\r\n        onFocus={handleInputFocus}\r\n        onChange={handleInputChange}\r\n      />\r\n    </InputWrapper>\r\n  );\r\n}\r\n\r\nUserInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  handleInputFocus: PropTypes.func.isRequired,\r\n  handleInputChange: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TogglePasswordWrapper = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst TogglePasswordLabel = styled.label`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport default function Input({ togglePassword }) {\r\n  return (\r\n    <TogglePasswordWrapper>\r\n      <input type=\"checkbox\" onClick={togglePassword} id=\"password\" />\r\n      <TogglePasswordLabel htmlFor=\"password\">顯示密碼 </TogglePasswordLabel>\r\n    </TogglePasswordWrapper>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  togglePassword: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  margin: 10px 0;\r\n  height: ${(props) => props.$height}px;\r\n  display: ${(props) => (props.errorMessage ? '1' : 'hidden')};\r\n`;\r\n\r\nexport default ErrorMessage","import styled from 'styled-components';\r\nimport Form from '../../components/Form';\r\nimport Button from '../../components/Button';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UserInput, TogglePasswordInput } from '../../components/Input';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport {\r\n  setUserErrorMessage,\r\n  selectIsUserLoading,\r\n  selectUserErrorMessage,\r\n  login,\r\n} from '../../redux/userSlice';\r\n\r\n\r\nconst Root = styled.div`\r\n  margin: 0 10vw;\r\n  min-height: calc(100vh - 143px);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  margin: 40px auto;\r\n  color: #909090;\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  margin: 30px auto 10px;\r\n`;\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const userErrorMessage = useSelector(selectUserErrorMessage);\r\n  const isUserLoading = useSelector(selectIsUserLoading);\r\n  const setError = () => dispatch(setUserErrorMessage(null));\r\n  const setValue = (setState) => (e) => setState(e.target.value);\r\n  const togglePassword = () => setShowPassword(showPassword ? false : true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ username, password })).then((userId) => {\r\n      if (userId) navigate('/react-blog');\r\n    });\r\n  };\r\n\r\n  useEffect(() => () => dispatch(setUserErrorMessage(null)), [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      <Form onSubmit={handleSubmit} $width={350}>\r\n        <Title>請登入部落格</Title>\r\n        <UserInput\r\n          type={'text'}\r\n          title={'帳號：'}\r\n          value={username}\r\n          handleInputFocus={setError}\r\n          handleInputChange={setValue(setUsername)}\r\n        />\r\n        <UserInput\r\n          type={showPassword ? 'text' : 'password'}\r\n          title={'密碼：'}\r\n          value={password}\r\n          handleInputFocus={setError}\r\n          handleInputChange={setValue(setPassword)}\r\n        />\r\n\r\n        <TogglePasswordInput togglePassword={togglePassword} />\r\n\r\n        {isUserLoading ? (\r\n          <Loading>Loading...</Loading>\r\n        ) : (\r\n          <>\r\n            <ErrorMessage errorMessage={userErrorMessage} $height={15}>\r\n              {userErrorMessage}\r\n            </ErrorMessage>\r\n            <SubmitButton>登入</SubmitButton>\r\n          </>\r\n        )}\r\n      </Form>\r\n    </Root>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport Form from '../../components/Form';\r\nimport Button from '../../components/Button';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUserId } from '../../redux/userSlice';\r\nimport {\r\n  addPost,\r\n  setErrorMessage,\r\n  selectErrorMessage,\r\n  selectIsLoading,\r\n} from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  margin-top: 30px;\r\n  min-height: calc(100vh - 143px);\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 28px;\r\n  margin: 0px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputHeader = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #808080;\r\n  outline: none;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst BodyInput = styled.textarea`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #808080;\r\n  outline: none;\r\n  height: 150px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  margin: 20px 0 10px 0;\r\n  color: #909090;\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  margin: 10px auto;\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const errorMessage = useSelector(selectErrorMessage);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const userId = useSelector(selectUserId);\r\n  const setError = () => dispatch(setErrorMessage(null));\r\n  const controlInput = (setValue) => (e) => setValue(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addPost({ title, body })).then((newPostResponse) => {\r\n      if (!newPostResponse.id) {\r\n        return dispatch(setErrorMessage(newPostResponse.message));\r\n      }\r\n      navigate('/react-blog/post/' + newPostResponse.id);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userId) navigate('/react-blog');\r\n  }, [userId, navigate]);\r\n\r\n  return (\r\n    <Root>\r\n      <Form onSubmit={handleSubmit} $width={460} $paddingType={'post'}>\r\n        <TitleWrapper>\r\n          <Title>新文章</Title>\r\n        </TitleWrapper>\r\n\r\n        <InputWrapper>\r\n          <InputHeader>標題：</InputHeader>\r\n          <TitleInput\r\n            value={title}\r\n            onChange={controlInput(setTitle)}\r\n            onFocus={setError}\r\n          />\r\n        </InputWrapper>\r\n\r\n        <InputWrapper>\r\n          <InputHeader>內容：</InputHeader>\r\n          <BodyInput\r\n            value={body}\r\n            col=\"20\"\r\n            onChange={controlInput(setBody)}\r\n            onFocus={setError}\r\n          />\r\n        </InputWrapper>\r\n\r\n        {isLoading ? (\r\n          <Loading>Loading...</Loading>\r\n        ) : (\r\n          <>\r\n            <SubmitButton>送出文章</SubmitButton>\r\n            {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          </>\r\n        )}\r\n      </Form>\r\n    </Root>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport Button from '../../components/Button';\r\nimport Form from '../../components/Form';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { selectUserId } from '../../redux/userSlice';\r\nimport {\r\n  editPost,\r\n  getPost,\r\n  setErrorMessage,\r\n  selectErrorMessage,\r\n} from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  margin-top: 30px;\r\n  min-height: calc(100vh - 143px);\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 28px;\r\n  margin: 0px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputHeader = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #808080;\r\n  outline: none;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst BodyInput = styled.textarea`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #808080;\r\n  outline: none;\r\n  height: 150px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  margin: 10px auto;\r\n`;\r\n\r\nexport default function EditPostPage() {\r\n  const { id } = useParams();\r\n  const userId = useSelector(selectUserId);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const errorMessage = useSelector(selectErrorMessage);\r\n  const setError = () => dispatch(setErrorMessage(null));\r\n  const controlInput = (setValue) => (e) => setValue(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !body || title.trim() === '' || body.trim() === '') {\r\n      return dispatch(setErrorMessage('不能空白哦'));\r\n    }\r\n    dispatch(editPost({ id, title, body }));\r\n    navigate('/react-blog/post/' + id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id)).then((res) => {\r\n      if (res.userId !== userId) return navigate('/react-blog/');\r\n      setTitle(res.title);\r\n      setBody(res.body);\r\n    });\r\n    return () => dispatch(getPost(id));\r\n  }, [dispatch, navigate, id, userId]);\r\n\r\n  return (\r\n    <Root>\r\n      <Form onSubmit={handleSubmit} $width={460} $paddingType={'post'}>\r\n        <TitleWrapper>\r\n          <Title>編輯文章 #{id}</Title>\r\n        </TitleWrapper>\r\n\r\n        <InputWrapper>\r\n          <InputHeader>標題：</InputHeader>\r\n          <TitleInput\r\n            value={title}\r\n            onChange={controlInput(setTitle)}\r\n            onFocus={setError}\r\n          />\r\n        </InputWrapper>\r\n\r\n        <InputWrapper>\r\n          <InputHeader>內容：</InputHeader>\r\n          <BodyInput\r\n            value={body}\r\n            onChange={controlInput(setBody)}\r\n            onFocus={setError}\r\n          />\r\n        </InputWrapper>\r\n\r\n        <SubmitButton href='#'>送出文章</SubmitButton>\r\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      </Form>\r\n    </Root>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport Post from '../../components/Post';\r\nimport Loading from '../../components/Loading';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPost, selectIsLoading, selectPost } from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  margin: 0 10vw;\r\n  min-height: calc(100vh - 123px);\r\n`;\r\n\r\nexport default function PostPage() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const post = useSelector(selectPost);\r\n  useEffect(() => dispatch(getPost(id)), [dispatch, id]);\r\n\r\n  return <Root>{!isLoading && post ? <Post post={post} /> : <Loading />}</Root>;\r\n}\r\n","import styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getLimitedPosts } from '../../redux/postsSlice';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PaginationContainer = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Pages = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Page = styled.a`\r\n  margin: 0 15px;\r\n`;\r\n\r\nconst PaginationDescription = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default function Pagination({\r\n  pagination,\r\n  limit,\r\n  totalPostsNumber,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const handleClickPage = (page) => () => {\r\n    dispatch(getLimitedPosts(page, limit));\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <PaginationContainer>\r\n      <PaginationDescription>\r\n        {`共有 ${totalPostsNumber} 篇文章，目前在第 ${currentPage} 頁`}\r\n      </PaginationDescription>\r\n      <Pages>\r\n        {pagination.map((page) => (\r\n          <Page href='#' key={page} onClick={handleClickPage(page)} children={page} />\r\n        ))}\r\n      </Pages>\r\n    </PaginationContainer>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  pagination: PropTypes.array.isRequired,\r\n  limit: PropTypes.number.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n  setValue: PropTypes.func.isRequired,\r\n  totalPostsNumber: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  setCurrentPage: PropTypes.func,\r\n};\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Pagination from '../../components/Pagination';\r\nimport Loading from '../../components/Loading';\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoint';\r\nimport {\r\n  getLimitedPosts,\r\n  selectTotalPostsNumber,\r\n  selectIsLoading,\r\n  selectPosts,\r\n  setPosts,\r\n} from '../../redux/postsSlice';\r\n\r\nconst Root = styled.div`\r\n  min-height: 90vh;\r\n  margin-top: 20px;\r\n  margin: 45px 10vw;\r\n  ${MEDIA_QUERY_MD} {\r\n    margin: 0 10vw;\r\n  }\r\n`;\r\n\r\nconst PostsContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 20px;\r\n  display: flex;\r\n  algin-items: flex-end;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  ${MEDIA_QUERY_MD} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 20px;\r\n  ${MEDIA_QUERY_MD} {\r\n    padding-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: #707070;\r\n`;\r\n\r\nfunction PostItem({ post }) {\r\n  return (\r\n    <PostsContainer>\r\n      <PostTitle to={`/react-blog/post/${post.id}`}>\r\n        {post.user.nickname.length > 10\r\n          ? `[${post.user.nickname.slice(0, 9)}...的文章] `\r\n          : `[${post.user.nickname}的文章] `}\r\n        {post.title.length > 20\r\n          ? `${post.title.slice(0, 20)}...`\r\n          : `${post.title}`}\r\n      </PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n    </PostsContainer>\r\n  );\r\n}\r\n\r\nexport default function PostsPage() {\r\n  const [pagination, setPagination] = useState([]);\r\n  const pages = useRef();\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const posts = useSelector(selectPosts);\r\n  const totalPostsNumber = useSelector(selectTotalPostsNumber);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLimitedPosts(1, 5));\r\n    pages.current = Math.ceil(totalPostsNumber / 5);\r\n    setPagination(Array.from({ length: pages.current }).map((_, i) => i + 1));\r\n  }, [dispatch, totalPostsNumber]);\r\n\r\n  return (\r\n    <Root>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {posts[0] &&\r\n            posts.map((post) => {\r\n              return <PostItem key={post.id} post={post} />;\r\n            })}\r\n\r\n          <Pagination\r\n            totalPostsNumber={totalPostsNumber}\r\n            pagination={pagination}\r\n            limit={5}\r\n            getData={getLimitedPosts}\r\n            setValue={setPosts}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        </>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UserInput, TogglePasswordInput } from '../../components/Input';\r\nimport styled from 'styled-components';\r\nimport Form from '../../components/Form';\r\nimport Button from '../../components/Button';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nimport {\r\n  setUserErrorMessage,\r\n  selectIsUserLoading,\r\n  selectUserErrorMessage,\r\n  register,\r\n} from '../../redux/userSlice';\r\n\r\nconst Root = styled.div`\r\n  margin: 0 10vw;\r\n  min-height: calc(100vh - 143px);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  margin: 40px auto;\r\n  color: #909090;\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  margin: 10px auto;\r\n`;\r\n\r\nexport default function RegisterPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [nickname, setNickname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const isUserLoading = useSelector(selectIsUserLoading);\r\n  const userErrorMessage = useSelector(selectUserErrorMessage);\r\n  const setError = () => dispatch(setUserErrorMessage(null));\r\n  const setValue = (setState) => (e) => setState(e.target.value);\r\n  const togglePassword = () => setShowPassword(showPassword ? false : true);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register({ nickname, username, password })).then((userId) => {\r\n      if (userId) navigate('/react-blog');\r\n    });\r\n  };\r\n\r\n  useEffect(() => () => dispatch(setUserErrorMessage(null)), [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      <Form onSubmit={handleSubmit} $width={360}>\r\n        <Title>註冊新帳號</Title>\r\n\r\n        <UserInput\r\n          type={'text'}\r\n          title={'暱稱：'}\r\n          value={nickname}\r\n          handleInputFocus={setError}\r\n          handleInputChange={setValue(setNickname)}\r\n        />\r\n\r\n        <UserInput\r\n          type={'text'}\r\n          title={'帳號：'}\r\n          value={username}\r\n          handleInputFocus={setError}\r\n          handleInputChange={setValue(setUsername)}\r\n        />\r\n\r\n        <UserInput\r\n          type={showPassword ? 'text' : 'password'}\r\n          title={'密碼：'}\r\n          value={password}\r\n          handleInputFocus={setError}\r\n          handleInputChange={setValue(setPassword)}\r\n        />\r\n\r\n        <TogglePasswordInput togglePassword={togglePassword} />\r\n\r\n        {isUserLoading ? (\r\n          <Loading>Loading...</Loading>\r\n        ) : (\r\n          <>\r\n            <ErrorMessage errorMessage={userErrorMessage} $height={35}>\r\n              {userErrorMessage}\r\n            </ErrorMessage>\r\n            <SubmitButton>註冊</SubmitButton>\r\n          </>\r\n        )}\r\n      </Form>\r\n    </Root>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Navbar from '../Navbar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getMe } from '../../redux/userSlice';\r\nimport {\r\n  AboutMePage,\r\n  LoginPage,\r\n  HomePage,\r\n  NewPostPage,\r\n  PostPage,\r\n  PostsPage,\r\n  EditPostPage,\r\n  RegisterPage,\r\n} from '../../pages/';\r\n\r\nconst Root = styled.div`\r\n  padding-top: 84px;\r\n  height: 100%;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  background: rgb(49 49 49);\r\n  padding: 6px 0;\r\n  width: 100%;\r\n  color: whitesmoke;\r\n  text-align: center;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getMe());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <Routes basename=\"/react-blog\">\r\n          <Route path={'/'} element={<HomePage />} />\r\n          <Route path={'/register'} element={<RegisterPage />} />\r\n          <Route path={'/login'} element={<LoginPage />} />\r\n          <Route path={'/posts'} element={<PostsPage />} />\r\n          <Route path={'/post/:id'} element={<PostPage />} />\r\n          <Route path={'/post/edit/:id'} element={<EditPostPage />} />\r\n          <Route path={'/new-post'} element={<NewPostPage />} />\r\n          <Route path={'/about-me'} element={<AboutMePage />} />\r\n        </Routes>\r\n        <Footer>Made with ❤️ by Nicolas</Footer>\r\n      </BrowserRouter>\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport postReducer from './postsSlice';\r\nimport userReducer from './userSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n// import 'normalize.css';\r\nimport './style/index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}